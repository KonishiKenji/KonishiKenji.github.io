# version: 2.1
# executors:
#   builder:
#     working_directory: ~/tmp
#     docker:
#       - image: circleci/node:10.13.0
#     resource_class: large
# commands:
#   build_storybook:
#     steps:
#       - restore_cache:
#           keys:
#             - node10.13.0-dependencies-{{ checksum "package.json" }}
#             - node10.13.0-dependencies-
#       - run: yarn install
#       - run:
#           name: "Generate storybook"
#           command: export NODE_OPTIONS="--max-old-space-size=8192"; yarn build-storybook
#       - run:
#           name: "Post storybook"
#           command: export CIRCLE_REPO_ID="159434216"; ./scripts/post_storybook.js
#       - store_artifacts:
#           path: ./storybook-static
#           destination: ~/storybook
#   restore_npm:
#     steps:
#       - restore_cache:
#           keys:
#             - node10.13.0-dependencies-{{ checksum "package.json" }}
#             - node10.13.0-dependencies-
#       - run: yarn install
#   save_npm:
#     steps:
#       - save_cache:
#           paths:
#             - node_modules
#           key: node10.13.0-dependencies-{{ checksum "package.json" }}
#   install_awscli:
#     steps:
#       - run:
#           name: Install python3
#           command: sudo apt-get install python3-dev
#       - run:
#           name: Install pip3
#           command: |
#             curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py
#             sudo python3 get-pip.py
#       - run:
#           name: Install awscli
#           command: sudo pip3 install awscli --upgrade
# jobs:
#   lint:
#     executor:
#       name: builder
#     docker:
#       - image: circleci/node:10.13.0
#         environment:
#           REVIEWDOG_VERSION: "0.9.11"
#     steps:
#       - checkout
#       - restore_npm
#       - run: curl -fSL https://github.com/haya14busa/reviewdog/releases/download/$REVIEWDOG_VERSION/reviewdog_linux_amd64 -o reviewdog && chmod +x ./reviewdog
#       - run: npx eslint -f=checkstyle 'src/**/*.{ts,tsx}' | tee -a /dev/stderr | ./reviewdog -f=checkstyle -diff="git diff" -reporter=github-pr-review
#       - run: save_npm
#   storybook:
#     executor:
#       name: builder
#     docker:
#       - image: circleci/node:10.13.0
#         environment:
#           REVIEWDOG_VERSION: "0.9.11"
#     steps:
#       - checkout
#       - restore_npm
#       - build_storybook
#       - save_npm
#   test:
#     executor:
#       name: builder
#     steps:
#       - checkout
#       - restore_npm
#       - run: yarn test
#       - save_npm
#   build-and-deploy: &build-and-deploy_ref
#     parameters:
#       environment:
#         type: string
#       cloudfront_distribution:
#         type: string
#       bucket:
#         type: string
#     executor:
#       name: builder
#     steps:
#       - checkout
#       - install_awscli
#       - restore_npm
#       - run:
#           name: build
#           command: yarn build:<< parameters.environment >>
#           no_output_timeout: 60m
#       - run:
#           name: Set AWS region
#           command: aws configure set region ap-northeast-1
#       - run:
#           name: Deploy
#           command: |
#             aws s3 cp build s3://<< parameters.bucket >>/v2 --recursive
#             aws s3 cp build/index.html s3://<< parameters.bucket >>/v2/index.html --metadata-directive REPLACE --cache-control "max-age=300"
#       - run:
#           name: Cache clear
#           command: aws cloudfront create-invalidation --distribution-id << parameters.cloudfront_distribution >> --path '/v2*'
#   build-and-deploy-dev:
#     <<: *build-and-deploy_ref
# workflows:
#   version: 2
#   test-build-and-deploy:
#     jobs:
#       - lint:
#           filters:
#             branches:
#               only: /.*/
#             tags:
#               ignore: /.*/
#       - test:
#           filters:
#             branches:
#               only: /.*/
#             tags:
#               only: /.*/
#       - storybook:
#           filters:
#             branches:
#               only: /.*/
#             tags:
#               ignore: /.*/
#       - build-and-deploy-dev:
#           environment: dev
#           bucket: dev-mgr.knowbe.jp
#           cloudfront_distribution: E3EHUSFE76WRMC
#           requires: [test]
#           filters:
#             tags:
#               only: /^dev-v.*/
#             branches:
#               ignore: /.*/

# ==========================================================================================================
# ==========================================================================================================
# ==========================================================================================================

# Use the latest 2.1 version of CircleCI pipeline process engine. 
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

orbs:
  # The Node.js orb contains a set of prepackaged CircleCI configuration you can utilize
  # Orbs reduce the amount of configuration required for common tasks. 
  # See the orb documentation here: https://circleci.com/developer/orbs/orb/circleci/node
  node: circleci/node@4.1


jobs:
  # Below is the definition of your job to build and test your app, you can rename and customize it as you want.
  build-and-test:  
    # These next lines define a docker executor: https://circleci.com/docs/2.0/executor-types/
    # You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # A list of available CircleCI docker Convenience Images are available here: https://circleci.com/developer/images/image/cimg/node
    docker:
      - image: cimg/node:15.1
    # Then run your tests!
    # CircleCI will report the results back to your VCS provider.
    steps:
      # Checkout the code as the first step.
      - checkout
      # Next, the node orb's install-packages step will install the dependencies from a package.json.
      # The orb install-packages step will also automatically cache them for faster future runs.
      - node/install-packages
      # If you are using yarn instead npm, remove the line above and uncomment the two lines below.
      # - node/install-packages:
      #     pkg-manager: yarn 
      - run:
          name: Run tests
          command: npm test

workflows:
  # Below is the definition of your workflow.
  # Inside the workflow, you provide the jobs you want to run, e.g this workflow runs the build-and-test job above.
  # CircleCI will run this workflow on every commit.
  # For more details on extending your workflow, see the configuration docs: https://circleci.com/docs/2.0/configuration-reference/#workflows
  sample: 
    jobs:
      - build-and-test
      # For running simple node tests, you could optionally use the node/test job from the orb to replicate and replace the job above in fewer lines.
      # - node/test
